
JSON
 1. Создать внешний репозиторий c названием JSON.→ 
 создаем новый репозиторий на GitHub
 
 2. Клонировать репозиторий JSON на локальный компьютер.→ git clone путь с Гита
 
 3. Внутри локального JSON создать файл “new.json”.→ touch new.json
 
 4. Добавить файл под гит. → git add . или git add new.json
 
 5. Закоммитить файл. → git commit -m "комментарий"
 
 6. Отправить файл на внешний GitHub репозиторий. → git push
 
 7. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON. → vim new.json
 
 8. Отправить изменения на внешний репозиторий. → git commit -am "комментарий" и потом git push
 
 9. Создать файл preferences.json → touch preferences.json
 
 10. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON. → vim preferences.json
 { 
	"Favorite": { "Movie": "Guardian of the Galaxy",
		      "Series": "True detective",
		      "Music": "Queen",
		      "Season": "Winter",
		      "Food": "Burger",
		      "Country you want to visit": "Spain"
}
 
 11. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON → touch sklls.json → vim sklls.json
 
 12. Отправить сразу 2 файла на внешний репозиторий. → git add . и git commit -m "комментарий" и git push
 
 13. На веб интерфейсе создать файл bug_report.json.
 
 14. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 
 15. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 
 16. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 
 17. Синхронизировать внешний и локальный репозиторий JSON → git pull


XML
 1. Создать внешний репозиторий c названием XML.
 
 2. Клонировать репозиторий XML на локальный компьютер. → git clone путь
 
 3. Внутри локального XML создать файл “new.xml”. → touch new.xml
 
 4. Добавить файл под гит. → git add .
 
 5. Закоммитить файл. → git commit -m "комментарий" 
 
 6. Отправить файл на внешний GitHub репозиторий. → git push
 
 7. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML. →
 vim new.xml
 <xml>
	<Favorites>
		<Movie>Guardians of the galaxy</Movie>
		<Series>True Detective</Series>
		<Music>Queen</Music>
		<Season>Winter</Season>
		<Food>Burger</Food>
		<Country>Spain</Country>
	</Favorites>
</xml>
 
 8. Отправить изменения на внешний репозиторий. → git commit -am "комментарий" и потом git push
 
 9. Создать файл preferences.xml → touch preferences.xml
 
 10. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.→ vim preferences.xml
 
 11. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML → touch sklls.xml → vim sklls.json
 
 12. Сделать коммит в одну строку. → git add . | git commit -m "комментарий"
 
 13. Отправить сразу 2 файла на внешний репозиторий. → git push
 
 14. На веб интерфейсе создать файл bug_report.xml.
 
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 
 16. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 
 18. Синхронизировать внешний и локальный репозиторий XML → git pull

TXT
 1. Создать внешний репозиторий c названием TXT.
 
 2. Клонировать репозиторий TXT на локальный компьютер. → git clone путь
 
 3. Внутри локального TXT создать файл “new.txt”. → touch new.txt
 
 4. Добавить файл под гит. → git add . 
 
 5. Закоммитить файл.→ git commit -m "комментарий"
 
 6. Отправить файл на внешний GitHub репозиторий. → git push
 
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.→ vim new.txt
 
 
 8. Отправить изменения на внешний репозиторий. → git 
 
 9. Создать файл preferences.txt → touch preferences.txt
 
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT. → vim preferences.txt
 
Favories:

Movie : Guardian of the Galaxy
Series : True detective
Music : Queen
Season : Winter
Food : Burger
Country you want to visit : Spain
 
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT → touch sklls.txt → vim sklls.txt
 
 12. Сделать коммит в одну строку.→ git add . | git commit -m "комментарий"
 
 13. Отправить сразу 2 файла на внешний репозиторий. → git push
 
 14. На веб интерфейсе создать файл bug_report.txt.
 
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 
 18. Синхронизировать внешний и локальный репозиторий TXT → git pull
